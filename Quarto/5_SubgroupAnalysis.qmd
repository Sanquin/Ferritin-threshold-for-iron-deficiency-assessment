---
title: "Analysis of deltaHb - ferritin association for various subgroups"
format: 
    html:
        embed-resources: true
---

# Initialization

## Load packages

```{r}
#| label: libraries
#| code-fold: true
#| code-summary: Libraries
#| message: false
#| warning: false


# library("Hmisc")
library("zoo")
# library("mcp") # for bayesian changepoint analysis
# library("rjags")
library("pracma")
library("scales")
library("dplyr")
library(ggplot2)
library(hexbin)
library(ggExtra)
library("stringr")
```

## Directories

In this part of the code we ask you to define:

-   Your main directory (in which we will create a subdirectory for the bootstrap results and where the functions file is located)
-   Your data file
-   The folder to which we export results (more on this later in the document)

```{r}
#| label: define directory and data file
#define your main directory
subgroupdatasets <- list.files("~/Amber/Data/FerHb/2023-11-30/", full.names = T)
main_dir <- "~/Amber/FerHb" #define your main directory 
FileToUse<-subgroupdatasets[1] #define the dataset file you want to use for the analysis (1 of 6 datasets we agreed on)
export_folder <- "results_export" #define the name of the folder you want to export you results to
```

```{r}
#| label: create directories & load data + functions
#| code-fold: true
#setwd(main_dir)  
# setting up the sub directory for bootstrap results and a folder with today's date
sub_dir <- "bootstrap_results/"
currentDate <- Sys.Date()

# check if sub directory already exists, otherwise create it 
if (file.exists(sub_dir)){
      print("The folder for bootstrap results already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, sub_dir))
}

#check if the folder for today's bootstrap results already exists, otherwise create it
if (file.exists(file.path(sub_dir,currentDate))){
      print("Today's sub folder already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, sub_dir,currentDate))
}

#check if the folder for result export already exists, otherwise create it
if (file.exists(export_folder)){
      print("The folder for the result export already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder))
}


if (file.exists(file.path(export_folder, currentDate))){
      print("Today's sub folder already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate))
}

FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this time stamp already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

## Parameters

Here you have to define some parameters:

```{r}
#| label: base parameters
#| code-fold: false
#| code-summary: parameters
#| message: false
#| warning: false

#load the functions needed
source(file.path(main_dir, "1_Functions.R"))

#second segment of line

#plotting and analysis
menopausal_status <- T # indicate whether you want to additionally split the females by their menopausal status

#simulation
# dobayes<-F         # Indicate whether you want to perform a bayesian changepoint analysis (recommended: F)
dobootstrap<-T     # Indicate whether you want to perform a bootstrap of the max likelihood estimate for the changepoint (recommended: T)
printbootstrap<-T  # Indicate whether you want to print the bootstrap results. For readable quarto files this is not recommended (recommended: F) 
bsseed<-11          # seedvalue for the bootstrap
bootstrapsamples <- 1000 #number of bootstrap samples (recommended: 1000)

rollmean_nr<-1000  # nr of samples to use in the rolling mean
geompoint_transparency <- 0.05 


#exporting results
export_files <- T # Indicate whether you want to export the results of the analysis
proportion <- 0.03 # proportion of your data that you will export. This really depends on how big your data is. We recommend a proportion that will still display the pattern/direction of the data.



#second slope is set to constant by default
#std is set to constant by default, by this function
#which also sets p0 and ul, ll
set_constant_slope_std(T, T)

```

::: {.callout-important appearance="simple"}
## A note on exporting results

Only jittered values or values derived from analyses are exported.

When exporting the data, the dRefHb value and lFer variables are jittered, all the original values are removed before exporting. Original values are removed from the results of the analysis when exporting. Only the result of the analysis is exported

We export the results so we can, ultimately, combine results from all countries in one graph.

We could have made a loop for the procedure below, but the results would not have been displayed nicely in a quarto doc.
:::

# Changepoint analysis 1

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```

# Changepoint analysis 2

```{r}
#| label: sub analysis 2 data loading
FileToUse<-subgroupdatasets[2] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 2
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```

# Changepoint analysis 3

```{r}
#| label: sub analysis 3 data loading
FileToUse<-subgroupdatasets[3] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 3
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```

# Changepoint analysis 4

```{r}
#| label: sub analysis 4 data loading
FileToUse<-subgroupdatasets[4] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 4
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```
# Changepoint analysis 5

```{r}
#| label: sub analysis 5 data loading
FileToUse<-subgroupdatasets[5] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 5
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```
# Changepoint analysis 6

```{r}
#| label: sub analysis 6 data loading
FileToUse<-subgroupdatasets[6] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 6
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```
# Changepoint analysis 7

```{r}
#| label: sub analysis 7 data loading
FileToUse<-subgroupdatasets[7] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 7
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```
# Changepoint analysis 8

```{r}
#| label: sub analysis 8 data loading
FileToUse<-subgroupdatasets[8] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 8
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```
# Changepoint analysis 9

```{r}
#| label: sub analysis 9 data loading
FileToUse<-subgroupdatasets[9] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 9
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```
# Changepoint analysis 10

```{r}
#| label: sub analysis 10 data loading
FileToUse<-subgroupdatasets[10] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 10
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```
# Changepoint analysis 11
```{r}
#| label: sub analysis 11 data loading
FileToUse<-subgroupdatasets[11] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 11
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```
# Changepoint analysis 12
```{r}
#| label: sub analysis 12 data loading
FileToUse<-subgroupdatasets[12] #define the dataset file you want to use for the analysis 
FolderDataset <- str_split_i(FileToUse, "/", -1)
FolderDataset <- gsub('.rds', '', FolderDataset)

if (file.exists(file.path(export_folder, currentDate, FolderDataset))){
      print("A sub folder with this dataset already exists")
} else {
        # create a new sub directory inside
        # the main path
        dir.create(file.path(main_dir, export_folder,currentDate, FolderDataset))
}

data<-readRDS(FileToUse)
if(!is.factor(data$Geslacht)){data$Geslacht<-as.factor(data$Geslacht)}

```

```{r, fig.width=7, fig.height=7}
#| label: changepoint analysis 12
#| code-fold: true
#| code-summary: analysis
#| message: false
#| warning: false

### set male dataset for reference
constant_vals<-c(TRUE,FALSE)

for(constant_slope_val in constant_vals){
  for(constant_std_val in constant_vals){
    #set here constant slope/std
    set_constant_slope_std(constant_slope_val, constant_std_val)
    print("-------------")
    print(paste("Constant slope", constant_slope, "Constant std", constant_std))
    print('-------------')
    print("Males")
    refdata<-select_males_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataM<-refdata
    fitdata<-refdata
    title=paste0("Male donors (n=", nrow(refdataM),")", sep="")
    #Don't like this but not sure how else to approach
    #first c means constant slope, second c means constant std
    #fit values are stored in these vectors
    if(constant_slope & constant_std){
      pfit_male_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_male_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_male_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_male_fit_slope_fit_std <- plotHbFer()
    }

    if(export_files){
      print("Exporting files")
      exportData(refdataM)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)
      }

    print("Females")
    ### set female dataset for reference
    refdata<-select_females_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdataF<-refdata
    fitdata<-refdata
    title=paste0("Female donors (n=", nrow(refdataF), ")", sep="")
    if(constant_slope & constant_std){
      pfit_female_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_female_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_female_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_female_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdataF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}

    if(menopausal_status){
    ## set premenopausal female dataset for reference
    refdata<-select_premenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapreF<-refdata
    fitdata<-refdata
    title=paste0("Premenopausal donors (n=", nrow(refdatapreF), ")", sep="")
    print("Premenopausal")
    if(constant_slope & constant_std){
      pfit_premenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_premenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_premenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_premenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapreF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)} 

    ## set postmenopausal female dataset for reference
    refdata<-select_postmenopausal_only()
    refdata<-refdata[order(refdata$lFer),] # order data by lFer
    refdatapostF<-refdata
    fitdata<-refdata
    title=paste0("Postmenopausal donors (n=", nrow(refdatapostF), ")", sep="")
    print("Postmenopausal")
    if(constant_slope & constant_std){
      pfit_postmenop_constant_slope_constant_std <- plotHbFer()
    }else if (constant_slope & ! constant_std){
      pfit_postmenop_constant_slope_fit_std <-plotHbFer()
    } else if (!constant_slope & constant_std){
      pfit_postmenop_fit_slope_constant_std <- plotHbFer()
    } else if (! constant_slope & ! constant_std){
      pfit_postmenop_fit_slope_fit_std <- plotHbFer()
    }
    if(export_files){
      exportData(refdatapostF)
      exportRollmean(rollmean_data)
      exportSolution(sol_data)}
    }
  }
}

```